kube-prometheus-stack:
  defaultRules:
    rules:
      # Recording rules
      k8s: false
      kubeApiserver: false
      kubePrometheusNodeRecording: false
      kubeScheduler: false
      kubelet: false
      node: false

      # Alerting rules
      alertmanager: false
      etcd: false
      general: false
      kubeApiserverAvailability: false
      kubeApiserverError: false
      kubeApiserverSlos: false
      kubePrometheusGeneral: false
      kubePrometheusNodeAlerting: false
      kubeStateMetrics: false
      kubernetesAbsent: false
      kubernetesApps: false
      kubernetesResources: false
      kubernetesStorage: false
      kubernetesSystem: false
      network: false
      prometheus: false
      prometheusOperator: false
      time: false


  coreDns:
    service:
      selector:
        k8s-app: kube-dns


  prometheus:
    prometheusSpec:
      serviceMonitorSelectorNilUsesHelmValues: false
      ruleSelectorNilUsesHelmValues: false
      ruleSelector:
        matchLabels:
          release: prometheus-operator
    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: nginx
      hosts:
        - prometheus.host
      paths:
        - "/"


  grafana:
    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: nginx
      hosts:
        - grafana.host
      path: "/"
    sidecar:
      dashboards:
        searchNamespace: ALL
    # Configure dashboard provider to pre-install dashboards
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
        - name: 'default'
          orgId: 1
          folder: ''
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/default
    # List of dashbords we want to pre-installed dashboards
    dashboards:
      default:
        argocd-dashboard:
          url: https://raw.githubusercontent.com/argoproj/argo-cd/master/examples/dashboard.json
    adminPassword: prometheus-operator
    grafana.ini:
      server:
        enable_gzip: "true"
      analytics:
        check_for_updates: false
        reporting_enabled: false
      auth.anonymous:
        enabled: true

  alertmanager:
    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: nginx
      hosts:
        - alertmanager.host
      paths:
        - "/"

  prometheusOperator:
    admissionWebhooks:
      enabled: false
    tlsProxy:
      enabled: false
